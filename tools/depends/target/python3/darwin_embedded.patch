--- a/configure.ac
+++ b/configure.ac
@@ -6785,7 +6785,7 @@
 AS_CASE([$ac_sys_system],
   [AIX], [PY_STDLIB_MOD_SET_NA([_scproxy], [spwd])],
   [VxWorks*], [PY_STDLIB_MOD_SET_NA([_scproxy], [_crypt], [termios], [grp])],
-  [Darwin], [PY_STDLIB_MOD_SET_NA([ossaudiodev], [spwd])],
+  [Darwin], [PY_STDLIB_MOD_SET_NA([ossaudiodev], [spwd], [_posixsubprocess], [_scproxy], [_tkinter], [_xxsubinterpreters])],
   [CYGWIN*], [PY_STDLIB_MOD_SET_NA([_scproxy], [nis])],
   [QNX*], [PY_STDLIB_MOD_SET_NA([_scproxy], [nis])],
   [FreeBSD*], [PY_STDLIB_MOD_SET_NA([_scproxy], [spwd])],
--- a/Lib/os.py
+++ b/Lib/os.py
@@ -604,6 +604,7 @@
         fullname = path.join(dir, file)
         try:
             exec_func(fullname, *argrest)
+            return
         except (FileNotFoundError, NotADirectoryError) as e:
             last_exc = e
         except OSError as e:
--- a/Lib/platform.py
+++ b/Lib/platform.py
@@ -607,7 +607,7 @@
         default in case the command should fail.
 
     """
-    if sys.platform in ('dos', 'win32', 'win16'):
+    if sys.platform in ('dos', 'win32', 'win16', 'darwin'):
         # XXX Others too ?
         return default
 
--- a/Lib/subprocess.py
+++ b/Lib/subprocess.py
@@ -75,7 +75,7 @@
     _mswindows = True
 
 # wasm32-emscripten and wasm32-wasi do not support processes
-_can_fork_exec = sys.platform not in {"emscripten", "wasi"}
+_can_fork_exec = sys.platform not in {"emscripten", "wasi", "darwin"}
 
 if _mswindows:
     import _winapi
--- a/Lib/urllib/request.py
+++ b/Lib/urllib/request.py
@@ -2624,11 +2624,9 @@
 
 
 if sys.platform == 'darwin':
-    from _scproxy import _get_proxy_settings, _get_proxies
 
     def proxy_bypass_macosx_sysconf(host):
-        proxy_settings = _get_proxy_settings()
-        return _proxy_bypass_macosx_sysconf(host, proxy_settings)
+        return False
 
     def getproxies_macosx_sysconf():
         """Return a dictionary of scheme -> proxy server URL mappings.
@@ -2636,7 +2636,7 @@
         This function uses the MacOSX framework SystemConfiguration
         to fetch the proxy information.
         """
-        return _get_proxies()
+        return {}
 
 
 
@@ -2649,9 +2649,9 @@
         """
         proxies = getproxies_environment()
         if proxies:
-            return proxy_bypass_environment(host, proxies)
+            return False
         else:
-            return proxy_bypass_macosx_sysconf(host)
+            return False
 
     def getproxies():
         return getproxies_environment() or getproxies_macosx_sysconf()
